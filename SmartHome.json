[
    {
        "id": "24addffb765ff220",
        "type": "tab",
        "label": "Main Control",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "994f568695ac5b0d",
        "type": "tab",
        "label": "HomeKit: Pico1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "28a4f46886da80fe",
        "type": "tab",
        "label": "HomeKit: Pico2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f5edfd9a870ed6bf",
        "type": "tab",
        "label": "Blinds",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c23d2597b45e9c9f",
        "type": "tab",
        "label": "Lights",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c8f7517e78ec8dba",
        "type": "tab",
        "label": "STATUS",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "bda6b5c4b7c97402",
        "type": "tab",
        "label": "PRESET",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "042576a447ce56b6",
        "type": "tab",
        "label": "Node test",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9048d15de482c206",
        "type": "group",
        "z": "994f568695ac5b0d",
        "name": "Dimmable Bulb",
        "style": {
            "label": true
        },
        "nodes": [
            "b5aa8b172c629cb0",
            "32e2eb063c49f5e2"
        ],
        "x": 414,
        "y": 119,
        "w": 372,
        "h": 82,
        "info": "# Dimmable Bulb\n\nThis is a dimmable bulb. The Characteristic Properties enable brightness. It is a white bulb which can be adjusted from 0 to 100% brightness."
    },
    {
        "id": "cba6f07514d7cd6d",
        "type": "group",
        "z": "994f568695ac5b0d",
        "name": "Window covering accessory",
        "style": {
            "label": true
        },
        "nodes": [
            "bc8255ee55eac7b7",
            "5de6f0f6fc6cf882",
            "b44dfa7be83b01a7"
        ],
        "x": 254,
        "y": 359,
        "w": 552,
        "h": 82,
        "info": "# Dimmable Bulb\n\nThis is a dimmable bulb. The Characteristic Properties enable brightness. It is a white bulb which can be adjusted from 0 to 100% brightness."
    },
    {
        "id": "9524a288e3cb4790",
        "type": "group",
        "z": "c23d2597b45e9c9f",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "bce77a950b79eeb1",
            "455719b28900f3e6",
            "5ab36777c533c5ac",
            "5435041005b99fcc",
            "e81cc3a6712d9011",
            "b7c0808b31d888b8",
            "1616d9783f68278a",
            "7a154b28f410b0ef"
        ],
        "x": 174,
        "y": 119,
        "w": 712,
        "h": 162
    },
    {
        "id": "97055c35fce90447",
        "type": "group",
        "z": "c23d2597b45e9c9f",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "bd72107f698dd465",
            "42e5648499875cef",
            "2881c88341ec83c3",
            "d9b99d9ce33decee",
            "a8c7456c9993c10e",
            "77ffc8933d213e4f",
            "52da75c0932f4aa2"
        ],
        "x": 334,
        "y": 319,
        "w": 552,
        "h": 162
    },
    {
        "id": "0890bdfdfb4b5c74",
        "type": "group",
        "z": "c8f7517e78ec8dba",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "888098a48534b797",
            "ed014a8eb2ca8eec",
            "ea6208d40dc9ee8f",
            "db89119fd5f98426",
            "76c28458c076ae74",
            "fe8a3e8627ad96cb",
            "e0a6dcdb67c60ab3"
        ],
        "x": 274,
        "y": 519,
        "w": 552,
        "h": 162
    },
    {
        "id": "2416e83a8061434e",
        "type": "group",
        "z": "c8f7517e78ec8dba",
        "name": "",
        "style": {
            "label": true
        },
        "nodes": [
            "0a117b463041ec95",
            "7e0a1022837d53d7",
            "061c338c40f89e5b",
            "ff726499903087db",
            "8d79d8dc22b526b5",
            "2ceac7ab9f1c2c2f",
            "f836cd5fa8176504",
            "9bcf91acdfb6d3e8",
            "11bcb79d1f702af9",
            "104556a6dc858f6d",
            "8f279c814025cc28",
            "f0b795d803a242f8",
            "319c3960c645e705",
            "acf9daa2c2b860ec",
            "73b4e9cdd42d5558",
            "911624a51f6f6b84",
            "28fa4a1056ac7c7f"
        ],
        "x": 294,
        "y": 119,
        "w": 532,
        "h": 362
    },
    {
        "id": "26e53faf2b84ee7d",
        "type": "group",
        "z": "bda6b5c4b7c97402",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "72bd6ef3177806bf",
            "4a5085472e0ed6b1",
            "b1553a6c465c31af",
            "722cac8d15d4a795",
            "284c240164cf782b",
            "43dec161b614ce6a",
            "6e8551e1e2324dc6",
            "a6b44c9240538153",
            "048c981e4fff6470",
            "a02e6369f0d0f7d9",
            "70a632d1a890dd08",
            "30d5c0826476ccef",
            "6eef616398e28bdd",
            "c89958bf0649c980",
            "e7f6c298891f01f0"
        ],
        "x": 354,
        "y": 139,
        "w": 532,
        "h": 362
    },
    {
        "id": "d80438cba1a188eb",
        "type": "group",
        "z": "042576a447ce56b6",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "30397406d20d23fe",
            "2f99ddb03123ca52",
            "8db77c7dae3226d4",
            "42957532156295ed"
        ],
        "x": 354,
        "y": 219,
        "w": 452,
        "h": 122
    },
    {
        "id": "221fdfd5bf22314c",
        "type": "group",
        "z": "28a4f46886da80fe",
        "name": "Dimmable Bulb",
        "style": {
            "label": true
        },
        "nodes": [
            "8d5202013b876288",
            "6049f0a1576b0318"
        ],
        "x": 374,
        "y": 179,
        "w": 372,
        "h": 82,
        "info": "# Dimmable Bulb\n\nThis is a dimmable bulb. The Characteristic Properties enable brightness. It is a white bulb which can be adjusted from 0 to 100% brightness."
    },
    {
        "id": "645dd172e5ddce78",
        "type": "group",
        "z": "28a4f46886da80fe",
        "name": "Window covering accessory",
        "style": {
            "label": true
        },
        "nodes": [
            "b26b06efeea20c61",
            "f9ec414af79c746d",
            "6c3d9dd523f74d7e"
        ],
        "x": 194,
        "y": 299,
        "w": 552,
        "h": 82
    },
    {
        "id": "ea81039653bcab44",
        "type": "group",
        "z": "994f568695ac5b0d",
        "name": "Dimmable Bulb",
        "style": {
            "label": true
        },
        "nodes": [
            "d968e40705dab0cb",
            "d089d585f4d2c9b4"
        ],
        "x": 414,
        "y": 219,
        "w": 372,
        "h": 82,
        "info": "# Dimmable Bulb\n\nThis is a dimmable bulb. The Characteristic Properties enable brightness. It is a white bulb which can be adjusted from 0 to 100% brightness."
    },
    {
        "id": "2c5fff7be741333e",
        "type": "group",
        "z": "24addffb765ff220",
        "name": "to receive the response serially",
        "style": {
            "label": true
        },
        "nodes": [
            "fc19da8fd15bcecf",
            "811793350f2a39ea"
        ],
        "x": 694,
        "y": 179,
        "w": 452,
        "h": 82
    },
    {
        "id": "cd1a10b280c85288",
        "type": "group",
        "z": "24addffb765ff220",
        "name": "to send the commands serially",
        "style": {
            "label": true
        },
        "nodes": [
            "a99d168a1d271685",
            "dd78ed863dd13fe5"
        ],
        "x": 174,
        "y": 179,
        "w": 422,
        "h": 82
    },
    {
        "id": "7a13120f65dabfdf",
        "type": "group",
        "z": "24addffb765ff220",
        "name": "to send the commands through file",
        "style": {
            "label": true
        },
        "nodes": [
            "e28c0f39057e4276",
            "a1f2d652a8562d2e",
            "ced8f2541ada5528",
            "558aa848de167eb0"
        ],
        "x": 174,
        "y": 339,
        "w": 382,
        "h": 142
    },
    {
        "id": "36ae5ae358f97e3f",
        "type": "group",
        "z": "24addffb765ff220",
        "name": "to receive the response through file",
        "style": {
            "label": true
        },
        "nodes": [
            "fcf5327adae08eb1",
            "69a67bb81c5190cb",
            "7107617ec83acd68",
            "3ca24aa4124b73f0"
        ],
        "x": 694,
        "y": 339,
        "w": 672,
        "h": 122
    },
    {
        "id": "5044f047d5d4e7d2",
        "type": "group",
        "z": "f5edfd9a870ed6bf",
        "name": "Blinds control",
        "style": {
            "label": true
        },
        "nodes": [
            "19bbc9e5debf61f8",
            "78407b63e4bd2ebb",
            "01e7b3c398cd35d2",
            "d81aa92f0404741c",
            "fed5002048a1f138",
            "6efa67dfe402d162",
            "821b2da9efed2e70",
            "5a38b3c461277ea2",
            "1ff0bb3059d774a6",
            "3e91ca88cf63df5a",
            "5a97a53880512448",
            "9a72da1574fc4c39",
            "f4168ee4b8118301",
            "608a3192bdc93d6f",
            "ae5b2dc9452db079",
            "5736e81843bf946d",
            "13f2ca4873dee476"
        ],
        "x": 414,
        "y": 99,
        "w": 602,
        "h": 442
    },
    {
        "id": "52da75c0932f4aa2",
        "type": "junction",
        "z": "c23d2597b45e9c9f",
        "g": "97055c35fce90447",
        "x": 860,
        "y": 400,
        "wires": [
            [
                "fc44022d3fde44d6"
            ]
        ]
    },
    {
        "id": "6eef616398e28bdd",
        "type": "junction",
        "z": "bda6b5c4b7c97402",
        "g": "26e53faf2b84ee7d",
        "x": 860,
        "y": 200,
        "wires": [
            [
                "256d114e64dd7ad4"
            ]
        ]
    },
    {
        "id": "c89958bf0649c980",
        "type": "junction",
        "z": "bda6b5c4b7c97402",
        "g": "26e53faf2b84ee7d",
        "x": 860,
        "y": 320,
        "wires": [
            [
                "256d114e64dd7ad4"
            ]
        ]
    },
    {
        "id": "e7f6c298891f01f0",
        "type": "junction",
        "z": "bda6b5c4b7c97402",
        "g": "26e53faf2b84ee7d",
        "x": 860,
        "y": 440,
        "wires": [
            [
                "256d114e64dd7ad4"
            ]
        ]
    },
    {
        "id": "7a154b28f410b0ef",
        "type": "junction",
        "z": "c23d2597b45e9c9f",
        "g": "9524a288e3cb4790",
        "x": 860,
        "y": 200,
        "wires": [
            [
                "fc44022d3fde44d6"
            ]
        ]
    },
    {
        "id": "e0a6dcdb67c60ab3",
        "type": "junction",
        "z": "c8f7517e78ec8dba",
        "g": "0890bdfdfb4b5c74",
        "x": 800,
        "y": 600,
        "wires": [
            [
                "23487a7bf8d99a8a"
            ]
        ]
    },
    {
        "id": "28fa4a1056ac7c7f",
        "type": "junction",
        "z": "c8f7517e78ec8dba",
        "g": "2416e83a8061434e",
        "x": 800,
        "y": 300,
        "wires": [
            [
                "23487a7bf8d99a8a"
            ]
        ]
    },
    {
        "id": "50ba8cbb644a7bb0",
        "type": "serial-port",
        "name": "Rx",
        "serialport": "/dev/ttyS0",
        "serialbaud": "19200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "bin",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "616e7ac9b1ef9449",
        "type": "ui_group",
        "name": "Comm Check",
        "tab": "1c9ef4849bbc4375",
        "order": 2,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3d25ddb969d32130",
        "type": "ui_group",
        "name": "Status",
        "tab": "c2b80ba775a0e7ae",
        "order": 2,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2c6cdcabf1e2526e",
        "type": "serial-port",
        "name": "Tx",
        "serialport": "/dev/ttyS0",
        "serialbaud": "19200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "",
        "bin": "false",
        "out": "char",
        "addchar": "\\r",
        "responsetimeout": "10000"
    },
    {
        "id": "fa0d92472fc34a80",
        "type": "ui_group",
        "name": "PRESET",
        "tab": "8483fb00518a7a02",
        "order": 3,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "307e1eac5c850044",
        "type": "ui_group",
        "name": "Lights",
        "tab": "630d924bb5e9ab07",
        "order": 4,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "8fadbb49cca182e7",
        "type": "homekit-bridge",
        "bridgeName": "node-red-bridge",
        "pinCode": "123-45-678",
        "port": "",
        "advertiser": "bonjour-hap",
        "allowInsecureRequest": false,
        "manufacturer": "NRCHKB",
        "model": "1.6.1",
        "serialNo": "Default Serial Number",
        "firmwareRev": "1.6.1",
        "hardwareRev": "1.6.1",
        "softwareRev": "1.6.1",
        "customMdnsConfig": false,
        "mdnsMulticast": true,
        "mdnsInterface": "",
        "mdnsPort": "",
        "mdnsIp": "",
        "mdnsTtl": "",
        "mdnsLoopback": true,
        "mdnsReuseAddr": true,
        "allowMessagePassthrough": true
    },
    {
        "id": "8483fb00518a7a02",
        "type": "ui_tab",
        "name": "PRESET",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "630d924bb5e9ab07",
        "type": "ui_tab",
        "name": "Lights",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c2b80ba775a0e7ae",
        "type": "ui_tab",
        "name": "STATUS",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1c9ef4849bbc4375",
        "type": "ui_tab",
        "name": "Node test",
        "icon": "dashboard",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "39d6b65698d471e1",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#188c2b",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#188c2b",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#188c2b",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#23cd3f",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#188c2b",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "f05509709a54b2ee",
        "type": "ui_tab",
        "name": "Blinds",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "b0d6775213cbf9fa",
        "type": "ui_group",
        "name": "Blinds",
        "tab": "f05509709a54b2ee",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a99d168a1d271685",
        "type": "link in",
        "z": "24addffb765ff220",
        "g": "cd1a10b280c85288",
        "name": "link_to_all",
        "links": [
            "1ff0bb3059d774a6",
            "23487a7bf8d99a8a",
            "256d114e64dd7ad4",
            "4587be83258a5766",
            "fc44022d3fde44d6"
        ],
        "x": 215,
        "y": 220,
        "wires": [
            [
                "dd78ed863dd13fe5",
                "ced8f2541ada5528",
                "558aa848de167eb0"
            ]
        ]
    },
    {
        "id": "dd78ed863dd13fe5",
        "type": "serial out",
        "z": "24addffb765ff220",
        "g": "cd1a10b280c85288",
        "name": "Cmds sent serially",
        "serial": "2c6cdcabf1e2526e",
        "x": 480,
        "y": 220,
        "wires": []
    },
    {
        "id": "fc19da8fd15bcecf",
        "type": "serial in",
        "z": "24addffb765ff220",
        "g": "2c5fff7be741333e",
        "name": "Serial data received",
        "serial": "50ba8cbb644a7bb0",
        "x": 810,
        "y": 220,
        "wires": [
            [
                "811793350f2a39ea"
            ]
        ]
    },
    {
        "id": "811793350f2a39ea",
        "type": "debug",
        "z": "24addffb765ff220",
        "g": "2c5fff7be741333e",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 220,
        "wires": []
    },
    {
        "id": "e28c0f39057e4276",
        "type": "link in",
        "z": "24addffb765ff220",
        "g": "7a13120f65dabfdf",
        "name": "link_to_pico1",
        "links": [
            "57f6e3109d41ee40"
        ],
        "x": 215,
        "y": 380,
        "wires": [
            [
                "dd78ed863dd13fe5",
                "ced8f2541ada5528"
            ]
        ]
    },
    {
        "id": "a1f2d652a8562d2e",
        "type": "link in",
        "z": "24addffb765ff220",
        "g": "7a13120f65dabfdf",
        "name": "link_to_pico2",
        "links": [
            "3ea4d6379a771539"
        ],
        "x": 215,
        "y": 440,
        "wires": [
            [
                "dd78ed863dd13fe5",
                "558aa848de167eb0"
            ]
        ]
    },
    {
        "id": "558aa848de167eb0",
        "type": "file",
        "z": "24addffb765ff220",
        "g": "7a13120f65dabfdf",
        "name": "pico2 write",
        "filename": "/tmp/pico_2.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 460,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "ced8f2541ada5528",
        "type": "file",
        "z": "24addffb765ff220",
        "g": "7a13120f65dabfdf",
        "name": "pico1 write",
        "filename": "/tmp/pico_1.txt",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 460,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "fcf5327adae08eb1",
        "type": "watch",
        "z": "24addffb765ff220",
        "g": "36ae5ae358f97e3f",
        "name": "watch pico1 response",
        "files": "/tmp/pico_1_response.txt",
        "recursive": "",
        "x": 820,
        "y": 380,
        "wires": [
            [
                "69a67bb81c5190cb"
            ]
        ]
    },
    {
        "id": "69a67bb81c5190cb",
        "type": "file in",
        "z": "24addffb765ff220",
        "g": "36ae5ae358f97e3f",
        "name": "read file",
        "filename": "payload",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1060,
        "y": 400,
        "wires": [
            [
                "7107617ec83acd68"
            ]
        ]
    },
    {
        "id": "7107617ec83acd68",
        "type": "debug",
        "z": "24addffb765ff220",
        "g": "36ae5ae358f97e3f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 400,
        "wires": []
    },
    {
        "id": "3ca24aa4124b73f0",
        "type": "watch",
        "z": "24addffb765ff220",
        "g": "36ae5ae358f97e3f",
        "name": "watch pico2 response",
        "files": "/tmp/pico_2_response.txt",
        "recursive": "",
        "x": 820,
        "y": 420,
        "wires": [
            [
                "69a67bb81c5190cb"
            ]
        ]
    },
    {
        "id": "b5aa8b172c629cb0",
        "type": "homekit-service",
        "z": "994f568695ac5b0d",
        "g": "9048d15de482c206",
        "isParent": true,
        "hostType": "0",
        "bridge": "8fadbb49cca182e7",
        "accessoryId": "",
        "parentService": "",
        "name": "Light 1",
        "serviceName": "Lightbulb",
        "topic": "",
        "filter": false,
        "manufacturer": "unknown",
        "model": "Dummy",
        "serialNo": "Default Serial Number",
        "firmwareRev": "1.1.9",
        "hardwareRev": "1.0.0",
        "softwareRev": "1.0.0",
        "cameraConfigVideoProcessor": "ffmpeg",
        "cameraConfigSource": "",
        "cameraConfigStillImageSource": "",
        "cameraConfigMaxStreams": 2,
        "cameraConfigMaxWidth": 1280,
        "cameraConfigMaxHeight": 720,
        "cameraConfigMaxFPS": 10,
        "cameraConfigMaxBitrate": 300,
        "cameraConfigVideoCodec": "libx264",
        "cameraConfigAudioCodec": "libfdk_aac",
        "cameraConfigAudio": false,
        "cameraConfigPacketSize": 1316,
        "cameraConfigVerticalFlip": false,
        "cameraConfigHorizontalFlip": false,
        "cameraConfigMapVideo": "0:0",
        "cameraConfigMapAudio": "0:1",
        "cameraConfigVideoFilter": "scale=1280:720",
        "cameraConfigAdditionalCommandLine": "-tune zerolatency",
        "cameraConfigDebug": false,
        "cameraConfigSnapshotOutput": "disabled",
        "cameraConfigInterfaceName": "",
        "characteristicProperties": "{    \"Brightness\":true}",
        "waitForSetupMsg": false,
        "outputs": 2,
        "x": 490,
        "y": 160,
        "wires": [
            [
                "32e2eb063c49f5e2"
            ],
            []
        ]
    },
    {
        "id": "32e2eb063c49f5e2",
        "type": "function",
        "z": "994f568695ac5b0d",
        "g": "9048d15de482c206",
        "name": "function 42",
        "func": "let n = 1\nlet command = \"LOAD \" + n + \" \"; // Base command\n\nif (msg.payload.On !== undefined) {\n    // If \"On\" key exists, turn on or off based on its value\n    command += msg.payload.On ? \"100\" : \"0\";\n} else if (msg.payload.Brightness !== undefined) {\n    // If \"Brightness\" key exists, set brightness level\n    command += msg.payload.Brightness.toString();\n}\ncommand += \"\\r\"\nmsg.payload = command;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 160,
        "wires": [
            [
                "57f6e3109d41ee40"
            ]
        ]
    },
    {
        "id": "bc8255ee55eac7b7",
        "type": "homekit-service",
        "z": "994f568695ac5b0d",
        "g": "cba6f07514d7cd6d",
        "isParent": true,
        "hostType": "0",
        "bridge": "8fadbb49cca182e7",
        "accessoryId": "",
        "parentService": "",
        "name": "Blinds 1",
        "serviceName": "WindowCovering",
        "topic": "",
        "filter": false,
        "manufacturer": "unknown",
        "model": "Dummy",
        "serialNo": "Default Serial Number",
        "firmwareRev": "1.1.9",
        "hardwareRev": "1.0.0",
        "softwareRev": "1.0.0",
        "cameraConfigVideoProcessor": "ffmpeg",
        "cameraConfigSource": "",
        "cameraConfigStillImageSource": "",
        "cameraConfigMaxStreams": 2,
        "cameraConfigMaxWidth": 1280,
        "cameraConfigMaxHeight": 720,
        "cameraConfigMaxFPS": 10,
        "cameraConfigMaxBitrate": 300,
        "cameraConfigVideoCodec": "libx264",
        "cameraConfigAudioCodec": "libfdk_aac",
        "cameraConfigAudio": false,
        "cameraConfigPacketSize": 1316,
        "cameraConfigVerticalFlip": false,
        "cameraConfigHorizontalFlip": false,
        "cameraConfigMapVideo": "0:0",
        "cameraConfigMapAudio": "0:1",
        "cameraConfigVideoFilter": "scale=1280:720",
        "cameraConfigAdditionalCommandLine": "-tune zerolatency",
        "cameraConfigDebug": false,
        "cameraConfigSnapshotOutput": "disabled",
        "cameraConfigInterfaceName": "",
        "characteristicProperties": "{     \"TargetPosition\": {         \"minStep\": 0     } }",
        "waitForSetupMsg": false,
        "outputs": 2,
        "x": 340,
        "y": 400,
        "wires": [
            [
                "5de6f0f6fc6cf882"
            ],
            []
        ]
    },
    {
        "id": "5de6f0f6fc6cf882",
        "type": "switch",
        "z": "994f568695ac5b0d",
        "g": "cba6f07514d7cd6d",
        "name": "switch",
        "property": "payload.TargetPosition",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 530,
        "y": 400,
        "wires": [
            [
                "b44dfa7be83b01a7"
            ]
        ]
    },
    {
        "id": "b44dfa7be83b01a7",
        "type": "function",
        "z": "994f568695ac5b0d",
        "g": "cba6f07514d7cd6d",
        "name": "function 51",
        "func": "// Initialize or get the current position\nlet currentPosition = context.get('currentPosition') || 0;\nlet targetPosition = msg.payload.TargetPosition;\n\n// Map the percentage to the nearest level\nfunction getNearestLevel(percentage) {\n    const thresholds = [0, 25, 50, 75, 100];\n    const levels = [\"DN\", \"G3\", \"G2\", \"G1\", \"UP\"];\n    let index = thresholds.findIndex(threshold => percentage <= threshold);\n    return levels[index >= 0 ? index : levels.length - 1];\n}\n\n// Determine the nearest level for the target position\nlet targetLevel = getNearestLevel(targetPosition);\n\n// Prepare the command for the device with the nearest level\nlet deviceCommand = \"#0.0.0.A=\" + targetLevel + \"\\r\";\n\n// Check if the command should be sent\nlet shouldSendCommand = currentPosition !== targetPosition;\n\n// Update context with the new target position\ncontext.set('currentPosition', targetPosition);\n\nif (shouldSendCommand) {\n    // Send the command to the device\n    node.send([{ payload: deviceCommand }, null]);\n\n    // The \"CurrentPosition\" should only be updated after the device confirms the position has changed\n    // Simulate this with a delay\n    setTimeout(() => {\n        let homekitMessage = {\n            payload: {\n                \"CurrentPosition\": targetPosition,\n                \"TargetPosition\": targetPosition,\n                \"PositionState\": 2 // Stopped\n            }\n        };\n        // Send the updated state to HomeKit\n        node.send([null, homekitMessage]);\n    }, 100); // Delay for 100ms to simulate device movement time\n}\n\nreturn null; // No need to return anything as we're using node.send",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 400,
        "wires": [
            [
                "57f6e3109d41ee40"
            ],
            [
                "bc8255ee55eac7b7"
            ]
        ]
    },
    {
        "id": "57f6e3109d41ee40",
        "type": "link out",
        "z": "994f568695ac5b0d",
        "name": "HomeKit: Pico1",
        "mode": "link",
        "links": [
            "e28c0f39057e4276"
        ],
        "x": 955,
        "y": 320,
        "wires": []
    },
    {
        "id": "d968e40705dab0cb",
        "type": "homekit-service",
        "z": "994f568695ac5b0d",
        "g": "ea81039653bcab44",
        "isParent": true,
        "hostType": "0",
        "bridge": "8fadbb49cca182e7",
        "accessoryId": "",
        "parentService": "",
        "name": "Light 2",
        "serviceName": "Lightbulb",
        "topic": "",
        "filter": false,
        "manufacturer": "unknown",
        "model": "Dummy",
        "serialNo": "Default Serial Number",
        "firmwareRev": "1.1.9",
        "hardwareRev": "1.0.0",
        "softwareRev": "1.0.0",
        "cameraConfigVideoProcessor": "ffmpeg",
        "cameraConfigSource": "",
        "cameraConfigStillImageSource": "",
        "cameraConfigMaxStreams": 2,
        "cameraConfigMaxWidth": 1280,
        "cameraConfigMaxHeight": 720,
        "cameraConfigMaxFPS": 10,
        "cameraConfigMaxBitrate": 300,
        "cameraConfigVideoCodec": "libx264",
        "cameraConfigAudioCodec": "libfdk_aac",
        "cameraConfigAudio": false,
        "cameraConfigPacketSize": 1316,
        "cameraConfigVerticalFlip": false,
        "cameraConfigHorizontalFlip": false,
        "cameraConfigMapVideo": "0:0",
        "cameraConfigMapAudio": "0:1",
        "cameraConfigVideoFilter": "scale=1280:720",
        "cameraConfigAdditionalCommandLine": "-tune zerolatency",
        "cameraConfigDebug": false,
        "cameraConfigSnapshotOutput": "disabled",
        "cameraConfigInterfaceName": "",
        "characteristicProperties": "{    \"Brightness\":true}",
        "waitForSetupMsg": false,
        "outputs": 2,
        "x": 490,
        "y": 260,
        "wires": [
            [
                "d089d585f4d2c9b4"
            ],
            []
        ]
    },
    {
        "id": "d089d585f4d2c9b4",
        "type": "function",
        "z": "994f568695ac5b0d",
        "g": "ea81039653bcab44",
        "name": "function 43",
        "func": "let n = 2\nlet command = \"LOAD \" + n + \" \"; // Base command\n\nif (msg.payload.On !== undefined) {\n    // If \"On\" key exists, turn on or off based on its value\n    command += msg.payload.On ? \"100\" : \"0\";\n} else if (msg.payload.Brightness !== undefined) {\n    // If \"Brightness\" key exists, set brightness level\n    command += msg.payload.Brightness.toString();\n}\ncommand += \"\\r\"\nmsg.payload = command;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 260,
        "wires": [
            [
                "57f6e3109d41ee40"
            ]
        ]
    },
    {
        "id": "b5f2acb25e13e1cb",
        "type": "comment",
        "z": "994f568695ac5b0d",
        "name": "HomeKit accessories - Pico-W1",
        "info": "",
        "x": 550,
        "y": 60,
        "wires": []
    },
    {
        "id": "8d5202013b876288",
        "type": "homekit-service",
        "z": "28a4f46886da80fe",
        "g": "221fdfd5bf22314c",
        "isParent": true,
        "hostType": "0",
        "bridge": "8fadbb49cca182e7",
        "accessoryId": "",
        "parentService": "",
        "name": "Light 3",
        "serviceName": "Lightbulb",
        "topic": "",
        "filter": false,
        "manufacturer": "unknown",
        "model": "Dummy",
        "serialNo": "Default Serial Number",
        "firmwareRev": "1.1.9",
        "hardwareRev": "1.0.0",
        "softwareRev": "1.0.0",
        "cameraConfigVideoProcessor": "ffmpeg",
        "cameraConfigSource": "",
        "cameraConfigStillImageSource": "",
        "cameraConfigMaxStreams": 2,
        "cameraConfigMaxWidth": 1280,
        "cameraConfigMaxHeight": 720,
        "cameraConfigMaxFPS": 10,
        "cameraConfigMaxBitrate": 300,
        "cameraConfigVideoCodec": "libx264",
        "cameraConfigAudioCodec": "libfdk_aac",
        "cameraConfigAudio": false,
        "cameraConfigPacketSize": 1316,
        "cameraConfigVerticalFlip": false,
        "cameraConfigHorizontalFlip": false,
        "cameraConfigMapVideo": "0:0",
        "cameraConfigMapAudio": "0:1",
        "cameraConfigVideoFilter": "scale=1280:720",
        "cameraConfigAdditionalCommandLine": "-tune zerolatency",
        "cameraConfigDebug": false,
        "cameraConfigSnapshotOutput": "disabled",
        "cameraConfigInterfaceName": "",
        "characteristicProperties": "{    \"Brightness\":true}",
        "waitForSetupMsg": false,
        "outputs": 2,
        "x": 450,
        "y": 220,
        "wires": [
            [
                "6049f0a1576b0318"
            ],
            []
        ]
    },
    {
        "id": "6049f0a1576b0318",
        "type": "function",
        "z": "28a4f46886da80fe",
        "g": "221fdfd5bf22314c",
        "name": "function 52",
        "func": "let n = 1\nlet command = \"LOAD \" + n + \" \"; // Base command\n\nif (msg.payload.On !== undefined) {\n    // If \"On\" key exists, turn on or off based on its value\n    command += msg.payload.On ? \"100\" : \"0\";\n} else if (msg.payload.Brightness !== undefined) {\n    // If \"Brightness\" key exists, set brightness level\n    command += msg.payload.Brightness.toString();\n}\ncommand += \"\\r\"\nmsg.payload = command;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 220,
        "wires": [
            [
                "3ea4d6379a771539"
            ]
        ]
    },
    {
        "id": "b26b06efeea20c61",
        "type": "homekit-service",
        "z": "28a4f46886da80fe",
        "g": "645dd172e5ddce78",
        "isParent": true,
        "hostType": "0",
        "bridge": "8fadbb49cca182e7",
        "accessoryId": "",
        "parentService": "",
        "name": "Blinds 3",
        "serviceName": "WindowCovering",
        "topic": "",
        "filter": false,
        "manufacturer": "unknown",
        "model": "Dummy",
        "serialNo": "Default Serial Number",
        "firmwareRev": "1.1.9",
        "hardwareRev": "1.0.0",
        "softwareRev": "1.0.0",
        "cameraConfigVideoProcessor": "",
        "cameraConfigSource": "",
        "cameraConfigStillImageSource": "",
        "cameraConfigMaxStreams": "",
        "cameraConfigMaxWidth": "",
        "cameraConfigMaxHeight": "",
        "cameraConfigMaxFPS": "",
        "cameraConfigMaxBitrate": "",
        "cameraConfigVideoCodec": "",
        "cameraConfigAudioCodec": "",
        "cameraConfigAudio": false,
        "cameraConfigPacketSize": "",
        "cameraConfigVerticalFlip": false,
        "cameraConfigHorizontalFlip": false,
        "cameraConfigMapVideo": "",
        "cameraConfigMapAudio": "",
        "cameraConfigVideoFilter": "",
        "cameraConfigAdditionalCommandLine": "",
        "cameraConfigDebug": false,
        "cameraConfigInterfaceName": "",
        "characteristicProperties": "{    \"TargetPosition\": {        \"minStep\":0   }}",
        "waitForSetupMsg": false,
        "outputs": 2,
        "x": 280,
        "y": 340,
        "wires": [
            [
                "6c3d9dd523f74d7e"
            ],
            []
        ]
    },
    {
        "id": "f9ec414af79c746d",
        "type": "function",
        "z": "28a4f46886da80fe",
        "g": "645dd172e5ddce78",
        "name": "function 50",
        "func": "// Initialize or get the current position\nlet currentPosition = context.get('currentPosition') || 0;\nlet targetPosition = msg.payload.TargetPosition;\n\n// Map the percentage to the nearest level\nfunction getNearestLevel(percentage) {\n    const thresholds = [0, 25, 50, 75, 100];\n    const levels = [\"DN\", \"G3\", \"G2\", \"G1\", \"UP\"];\n    let index = thresholds.findIndex(threshold => percentage <= threshold);\n    return levels[index >= 0 ? index : levels.length - 1];\n}\n\n// Determine the nearest level for the target position\nlet targetLevel = getNearestLevel(targetPosition);\n\n// Prepare the command for the device with the nearest level\nlet deviceCommand = \"#0.0.0.A=\" + targetLevel + \"\\r\";\n\n// Check if the command should be sent\nlet shouldSendCommand = currentPosition !== targetPosition;\n\n// Update context with the new target position\ncontext.set('currentPosition', targetPosition);\n\nif (shouldSendCommand) {\n    // Send the command to the device\n    node.send([{ payload: deviceCommand }, null]);\n\n    // The \"CurrentPosition\" should only be updated after the device confirms the position has changed\n    // Simulate this with a delay\n    setTimeout(() => {\n        let homekitMessage = {\n            payload: {\n                \"CurrentPosition\": targetPosition,\n                \"TargetPosition\": targetPosition,\n                \"PositionState\": 2 // Stopped\n            }\n        };\n        // Send the updated state to HomeKit\n        node.send([null, homekitMessage]);\n    }, 100); // Delay for 100ms to simulate device movement time\n}\n\nreturn null; // No need to return anything as we're using node.send",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 340,
        "wires": [
            [
                "3ea4d6379a771539"
            ],
            [
                "b26b06efeea20c61"
            ]
        ]
    },
    {
        "id": "6c3d9dd523f74d7e",
        "type": "switch",
        "z": "28a4f46886da80fe",
        "g": "645dd172e5ddce78",
        "name": "switch",
        "property": "payload.TargetPosition",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 470,
        "y": 340,
        "wires": [
            [
                "f9ec414af79c746d"
            ]
        ]
    },
    {
        "id": "3ea4d6379a771539",
        "type": "link out",
        "z": "28a4f46886da80fe",
        "name": "HomeKit: Pico2",
        "mode": "link",
        "links": [
            "a1f2d652a8562d2e"
        ],
        "x": 905,
        "y": 260,
        "wires": []
    },
    {
        "id": "58a6155c5b6d68dd",
        "type": "comment",
        "z": "28a4f46886da80fe",
        "name": "HomeKit accessories - Pico-W2",
        "info": "",
        "x": 590,
        "y": 120,
        "wires": []
    },
    {
        "id": "19bbc9e5debf61f8",
        "type": "ui_button",
        "z": "f5edfd9a870ed6bf",
        "g": "5044f047d5d4e7d2",
        "name": "",
        "group": "b0d6775213cbf9fa",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Query",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "global",
        "x": 490,
        "y": 500,
        "wires": [
            [
                "78407b63e4bd2ebb"
            ]
        ]
    },
    {
        "id": "78407b63e4bd2ebb",
        "type": "function",
        "z": "f5edfd9a870ed6bf",
        "g": "5044f047d5d4e7d2",
        "name": "function 61",
        "func": "let G = flow.get(\"G\");\nif (G === undefined || G === null) {\n    // If G is undefined or null, leave it empty\n}\nlet cmd;\nif (G === '0') {\n    cmd = \"#0.0.0.B=QY\\r\";\n} else {\n    cmd = \"#255.\" + G + \".255.B=QY\\r\";\n}\nnode.send({ payload: cmd });\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 500,
        "wires": [
            [
                "1ff0bb3059d774a6"
            ]
        ]
    },
    {
        "id": "01e7b3c398cd35d2",
        "type": "ui_button",
        "z": "f5edfd9a870ed6bf",
        "g": "5044f047d5d4e7d2",
        "name": "",
        "group": "b0d6775213cbf9fa",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "0% ↑",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 490,
        "y": 200,
        "wires": [
            [
                "5a38b3c461277ea2"
            ]
        ]
    },
    {
        "id": "d81aa92f0404741c",
        "type": "ui_button",
        "z": "f5edfd9a870ed6bf",
        "g": "5044f047d5d4e7d2",
        "name": "",
        "group": "b0d6775213cbf9fa",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "100% ↓",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 500,
        "y": 360,
        "wires": [
            [
                "f4168ee4b8118301"
            ]
        ]
    },
    {
        "id": "fed5002048a1f138",
        "type": "ui_button",
        "z": "f5edfd9a870ed6bf",
        "g": "5044f047d5d4e7d2",
        "name": "",
        "group": "b0d6775213cbf9fa",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "25%",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 490,
        "y": 240,
        "wires": [
            [
                "3e91ca88cf63df5a"
            ]
        ]
    },
    {
        "id": "6efa67dfe402d162",
        "type": "ui_button",
        "z": "f5edfd9a870ed6bf",
        "g": "5044f047d5d4e7d2",
        "name": "",
        "group": "b0d6775213cbf9fa",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "50%",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 490,
        "y": 280,
        "wires": [
            [
                "5a97a53880512448"
            ]
        ]
    },
    {
        "id": "821b2da9efed2e70",
        "type": "ui_button",
        "z": "f5edfd9a870ed6bf",
        "g": "5044f047d5d4e7d2",
        "name": "",
        "group": "b0d6775213cbf9fa",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "75%",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 490,
        "y": 320,
        "wires": [
            [
                "9a72da1574fc4c39"
            ]
        ]
    },
    {
        "id": "5a38b3c461277ea2",
        "type": "function",
        "z": "f5edfd9a870ed6bf",
        "g": "5044f047d5d4e7d2",
        "name": "function 62",
        "func": "let G = flow.get(\"G\");\nif (G === undefined || G === null) {\n    // If G is undefined or null, leave it empty\n}\nlet cmd;\nif (G === '0') {\n    cmd = \"#0.0.0.B=UP\\r\";\n} else {\n    cmd = \"#255.\" + G + \".255.B=UP\\r\";\n}\nnode.send({ payload: cmd });\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 200,
        "wires": [
            [
                "1ff0bb3059d774a6"
            ]
        ]
    },
    {
        "id": "1ff0bb3059d774a6",
        "type": "link out",
        "z": "f5edfd9a870ed6bf",
        "g": "5044f047d5d4e7d2",
        "name": "link out 9",
        "mode": "link",
        "links": [
            "a99d168a1d271685"
        ],
        "x": 975,
        "y": 340,
        "wires": []
    },
    {
        "id": "3e91ca88cf63df5a",
        "type": "function",
        "z": "f5edfd9a870ed6bf",
        "g": "5044f047d5d4e7d2",
        "name": "function 63",
        "func": "let G = flow.get(\"G\");\nif (G === undefined || G === null) {\n    // If G is undefined or null, leave it empty\n}\nlet cmd;\nif (G === '0') {\n    cmd = \"#0.0.0.B=G1\\r\";\n} else {\n    cmd = \"#255.\" + G + \".255.B=G1\\r\";\n}\nnode.send({ payload: cmd });\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 240,
        "wires": [
            [
                "1ff0bb3059d774a6"
            ]
        ]
    },
    {
        "id": "5a97a53880512448",
        "type": "function",
        "z": "f5edfd9a870ed6bf",
        "g": "5044f047d5d4e7d2",
        "name": "function 64",
        "func": "let G = flow.get(\"G\");\nif (G === undefined || G === null) {\n    // If G is undefined or null, leave it empty\n}\nlet cmd;\nif (G === '0') {\n    cmd = \"#0.0.0.B=G2\\r\";\n} else {\n    cmd = \"#255.\" + G + \".255.B=G2\\r\";\n}\nnode.send({ payload: cmd });\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 280,
        "wires": [
            [
                "1ff0bb3059d774a6"
            ]
        ]
    },
    {
        "id": "9a72da1574fc4c39",
        "type": "function",
        "z": "f5edfd9a870ed6bf",
        "g": "5044f047d5d4e7d2",
        "name": "function 65",
        "func": "let G = flow.get(\"G\");\nif (G === undefined || G === null) {\n    // If G is undefined or null, leave it empty\n}\nlet cmd;\nif (G === '0') {\n    cmd = \"#0.0.0.B=G3\\r\";\n} else {\n    cmd = \"#255.\" + G + \".255.B=G3\\r\";\n}\nnode.send({ payload: cmd });\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 320,
        "wires": [
            [
                "1ff0bb3059d774a6"
            ]
        ]
    },
    {
        "id": "f4168ee4b8118301",
        "type": "function",
        "z": "f5edfd9a870ed6bf",
        "g": "5044f047d5d4e7d2",
        "name": "function 66",
        "func": "let G = flow.get(\"G\");\nif (G === undefined || G === null) {\n    // If G is undefined or null, leave it empty\n}\nlet cmd;\nif (G === '0') {\n    cmd = \"#0.0.0.B=DN\\r\";\n} else {\n    cmd = \"#255.\" + G + \".255.B=DN\\r\";\n}\nnode.send({ payload: cmd });\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 360,
        "wires": [
            [
                "1ff0bb3059d774a6"
            ]
        ]
    },
    {
        "id": "608a3192bdc93d6f",
        "type": "ui_button",
        "z": "f5edfd9a870ed6bf",
        "g": "5044f047d5d4e7d2",
        "name": "",
        "group": "b0d6775213cbf9fa",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Stop",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 490,
        "y": 440,
        "wires": [
            [
                "ae5b2dc9452db079"
            ]
        ]
    },
    {
        "id": "ae5b2dc9452db079",
        "type": "function",
        "z": "f5edfd9a870ed6bf",
        "g": "5044f047d5d4e7d2",
        "name": "function 67",
        "func": "let G = flow.get(\"G\");\nif (G === undefined || G === null) {\n    // If G is undefined or null, leave it empty\n}\nlet cmd;\nif (G === '0') {\n    cmd = \"#0.0.0.B=ST\\r\";\n} else {\n    cmd = \"#255.\" + G + \".255.B=ST\\r\";\n}\nnode.send({ payload: cmd });\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 440,
        "wires": [
            [
                "1ff0bb3059d774a6"
            ]
        ]
    },
    {
        "id": "5736e81843bf946d",
        "type": "function",
        "z": "f5edfd9a870ed6bf",
        "g": "5044f047d5d4e7d2",
        "name": "function 68",
        "func": "flow.set(\"G\", msg.payload); // Stores the value of Z in flow context\nreturn null; // No need to pass the message further\n",
        "outputs": 0,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 140,
        "wires": []
    },
    {
        "id": "13f2ca4873dee476",
        "type": "ui_dropdown",
        "z": "f5edfd9a870ed6bf",
        "g": "5044f047d5d4e7d2",
        "name": "Cabin selection",
        "label": "Cabin :",
        "tooltip": "choose one",
        "place": "Select option",
        "group": "b0d6775213cbf9fa",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "All blinds",
                "value": "0",
                "type": "str"
            },
            {
                "label": "Doug",
                "value": 21,
                "type": "num"
            },
            {
                "label": "Drew",
                "value": 20,
                "type": "num"
            },
            {
                "label": "Raj",
                "value": 19,
                "type": "num"
            },
            {
                "label": "18 N/A",
                "value": 18,
                "type": "num"
            },
            {
                "label": "17",
                "value": 17,
                "type": "num"
            },
            {
                "label": "16",
                "value": "16",
                "type": "str"
            },
            {
                "label": "15",
                "value": "15",
                "type": "str"
            },
            {
                "label": "14",
                "value": "14",
                "type": "str"
            },
            {
                "label": "13",
                "value": "13",
                "type": "str"
            },
            {
                "label": "12",
                "value": "12",
                "type": "str"
            },
            {
                "label": "11",
                "value": "11",
                "type": "str"
            },
            {
                "label": "10",
                "value": "10",
                "type": "str"
            },
            {
                "label": "09 N/A",
                "value": "09",
                "type": "str"
            },
            {
                "label": "last",
                "value": "08",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 520,
        "y": 140,
        "wires": [
            [
                "5736e81843bf946d"
            ]
        ]
    },
    {
        "id": "bd72107f698dd465",
        "type": "function",
        "z": "c23d2597b45e9c9f",
        "g": "97055c35fce90447",
        "name": "function 18",
        "func": "let sliderValue = msg.payload; // Get the slider value\nlet command = \"LOAD 1 \" + sliderValue + \"\\r\\n\"; // Construct the command\n\nmsg.payload = command; // Set the modified command as the new payload\nreturn msg; // Return the modified message\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 360,
        "wires": [
            [
                "52da75c0932f4aa2"
            ]
        ]
    },
    {
        "id": "42e5648499875cef",
        "type": "ui_slider",
        "z": "c23d2597b45e9c9f",
        "g": "97055c35fce90447",
        "name": "",
        "label": "SETLOAD1",
        "tooltip": "",
        "group": "307e1eac5c850044",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 430,
        "y": 360,
        "wires": [
            [
                "bd72107f698dd465"
            ]
        ]
    },
    {
        "id": "2881c88341ec83c3",
        "type": "function",
        "z": "c23d2597b45e9c9f",
        "g": "97055c35fce90447",
        "name": "function 21",
        "func": "let sliderValue = msg.payload; // Get the slider value\nlet command = \"LOAD 2 \" + sliderValue + \"\\r\\n\"; // Construct the command\n\nmsg.payload = command; // Set the modified command as the new payload\nreturn msg; // Return the modified message\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 400,
        "wires": [
            [
                "52da75c0932f4aa2"
            ]
        ]
    },
    {
        "id": "d9b99d9ce33decee",
        "type": "ui_slider",
        "z": "c23d2597b45e9c9f",
        "g": "97055c35fce90447",
        "name": "",
        "label": "SETLOAD2",
        "tooltip": "",
        "group": "307e1eac5c850044",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 430,
        "y": 400,
        "wires": [
            [
                "2881c88341ec83c3"
            ]
        ]
    },
    {
        "id": "a8c7456c9993c10e",
        "type": "function",
        "z": "c23d2597b45e9c9f",
        "g": "97055c35fce90447",
        "name": "function 22",
        "func": "let sliderValue = msg.payload; // Get the slider value\nlet command = \"LOAD 3 \" + sliderValue + \"\\r\\n\"; // Construct the command\n\nmsg.payload = command; // Set the modified command as the new payload\nreturn msg; // Return the modified message\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 440,
        "wires": [
            [
                "52da75c0932f4aa2"
            ]
        ]
    },
    {
        "id": "77ffc8933d213e4f",
        "type": "ui_slider",
        "z": "c23d2597b45e9c9f",
        "g": "97055c35fce90447",
        "name": "",
        "label": "SETLOAD3",
        "tooltip": "",
        "group": "307e1eac5c850044",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 430,
        "y": 440,
        "wires": [
            [
                "a8c7456c9993c10e"
            ]
        ]
    },
    {
        "id": "fc44022d3fde44d6",
        "type": "link out",
        "z": "c23d2597b45e9c9f",
        "name": "Lights",
        "mode": "link",
        "links": [
            "a99d168a1d271685"
        ],
        "x": 1025,
        "y": 300,
        "wires": []
    },
    {
        "id": "bce77a950b79eeb1",
        "type": "ui_switch",
        "z": "c23d2597b45e9c9f",
        "g": "9524a288e3cb4790",
        "name": "",
        "label": "Load1",
        "tooltip": "",
        "group": "307e1eac5c850044",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 450,
        "y": 160,
        "wires": [
            [
                "455719b28900f3e6"
            ]
        ]
    },
    {
        "id": "455719b28900f3e6",
        "type": "function",
        "z": "c23d2597b45e9c9f",
        "g": "9524a288e3cb4790",
        "name": "function 28",
        "func": "let switch_val = msg.payload; \nlet command;\n\nif (switch_val)\n    command = \"LOAD 1 100\\r\\n\";\nelse\n    command = \"LOAD 1 0\\r\\n\";\n    \nmsg.payload = command; // Set the modified command as the new payload\nreturn msg; // Return the modified message\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 160,
        "wires": [
            [
                "7a154b28f410b0ef"
            ]
        ]
    },
    {
        "id": "5ab36777c533c5ac",
        "type": "ui_switch",
        "z": "c23d2597b45e9c9f",
        "g": "9524a288e3cb4790",
        "name": "",
        "label": "Load2",
        "tooltip": "",
        "group": "307e1eac5c850044",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 450,
        "y": 200,
        "wires": [
            [
                "5435041005b99fcc"
            ]
        ]
    },
    {
        "id": "5435041005b99fcc",
        "type": "function",
        "z": "c23d2597b45e9c9f",
        "g": "9524a288e3cb4790",
        "name": "function 29",
        "func": "let switch_val = msg.payload; \nlet command;\n\nif (switch_val)\n    command = \"LOAD 2 100\\r\\n\";\nelse\n    command = \"LOAD 2 0\\r\\n\";\n    \nmsg.payload = command; // Set the modified command as the new payload\nreturn msg; // Return the modified message\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 200,
        "wires": [
            [
                "7a154b28f410b0ef"
            ]
        ]
    },
    {
        "id": "e81cc3a6712d9011",
        "type": "ui_switch",
        "z": "c23d2597b45e9c9f",
        "g": "9524a288e3cb4790",
        "name": "",
        "label": "Load3",
        "tooltip": "",
        "group": "307e1eac5c850044",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 450,
        "y": 240,
        "wires": [
            [
                "b7c0808b31d888b8"
            ]
        ]
    },
    {
        "id": "b7c0808b31d888b8",
        "type": "function",
        "z": "c23d2597b45e9c9f",
        "g": "9524a288e3cb4790",
        "name": "function 30",
        "func": "let switch_val = msg.payload; \nlet command;\n\nif (switch_val)\n    command = \"LOAD 3 100\\r\\n\";\nelse\n    command = \"LOAD 3 0\\r\\n\";\n    \nmsg.payload = command; // Set the modified command as the new payload\nreturn msg; // Return the modified message\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 240,
        "wires": [
            [
                "7a154b28f410b0ef"
            ]
        ]
    },
    {
        "id": "1616d9783f68278a",
        "type": "ui_switch",
        "z": "c23d2597b45e9c9f",
        "g": "9524a288e3cb4790",
        "name": "",
        "label": "All Loads",
        "tooltip": "",
        "group": "307e1eac5c850044",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 260,
        "y": 200,
        "wires": [
            [
                "bce77a950b79eeb1",
                "5ab36777c533c5ac",
                "e81cc3a6712d9011"
            ]
        ]
    },
    {
        "id": "ba1323b50667276d",
        "type": "comment",
        "z": "c23d2597b45e9c9f",
        "name": "Light control buttons",
        "info": "",
        "x": 550,
        "y": 80,
        "wires": []
    },
    {
        "id": "0a117b463041ec95",
        "type": "ui_button",
        "z": "c8f7517e78ec8dba",
        "g": "2416e83a8061434e",
        "name": "",
        "group": "3d25ddb969d32130",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "STATUS SCENE",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "global",
        "x": 410,
        "y": 160,
        "wires": [
            [
                "7e0a1022837d53d7"
            ]
        ],
        "inputLabels": [
            "button"
        ],
        "outputLabels": [
            "click"
        ]
    },
    {
        "id": "7e0a1022837d53d7",
        "type": "function",
        "z": "c8f7517e78ec8dba",
        "g": "2416e83a8061434e",
        "name": "function 2",
        "func": "let cmd = \"STATUS SCENE\\r\\n\";\nnode.send({ payload: cmd});\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 160,
        "wires": [
            [
                "28fa4a1056ac7c7f"
            ]
        ]
    },
    {
        "id": "061c338c40f89e5b",
        "type": "ui_button",
        "z": "c8f7517e78ec8dba",
        "g": "2416e83a8061434e",
        "name": "",
        "group": "3d25ddb969d32130",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "STATUS PROFILE",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "global",
        "x": 410,
        "y": 200,
        "wires": [
            [
                "ff726499903087db"
            ]
        ],
        "inputLabels": [
            "button"
        ],
        "outputLabels": [
            "click"
        ]
    },
    {
        "id": "ff726499903087db",
        "type": "function",
        "z": "c8f7517e78ec8dba",
        "g": "2416e83a8061434e",
        "name": "function 3",
        "func": "let cmd = \"STATUS PROFILE\\r\\n\";\nnode.send({ payload: cmd});\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 200,
        "wires": [
            [
                "28fa4a1056ac7c7f"
            ]
        ]
    },
    {
        "id": "8d79d8dc22b526b5",
        "type": "ui_button",
        "z": "c8f7517e78ec8dba",
        "g": "2416e83a8061434e",
        "name": "",
        "group": "3d25ddb969d32130",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "STATUS BUTTON",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "global",
        "x": 410,
        "y": 240,
        "wires": [
            [
                "2ceac7ab9f1c2c2f"
            ]
        ],
        "inputLabels": [
            "button"
        ],
        "outputLabels": [
            "click"
        ]
    },
    {
        "id": "2ceac7ab9f1c2c2f",
        "type": "function",
        "z": "c8f7517e78ec8dba",
        "g": "2416e83a8061434e",
        "name": "function 4",
        "func": "let cmd = \"STATUS BUTTON\\r\\n\";\nnode.send({ payload: cmd});\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 240,
        "wires": [
            [
                "28fa4a1056ac7c7f"
            ]
        ]
    },
    {
        "id": "f836cd5fa8176504",
        "type": "ui_button",
        "z": "c8f7517e78ec8dba",
        "g": "2416e83a8061434e",
        "name": "",
        "group": "3d25ddb969d32130",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "STATUS BUTTONLOCK",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "global",
        "x": 430,
        "y": 280,
        "wires": [
            [
                "9bcf91acdfb6d3e8"
            ]
        ],
        "inputLabels": [
            "button"
        ],
        "outputLabels": [
            "click"
        ]
    },
    {
        "id": "9bcf91acdfb6d3e8",
        "type": "function",
        "z": "c8f7517e78ec8dba",
        "g": "2416e83a8061434e",
        "name": "function 5",
        "func": "let cmd = \"STATUS BUTTONLOCK\\r\\n\";\nnode.send({ payload: cmd});\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 280,
        "wires": [
            [
                "28fa4a1056ac7c7f"
            ]
        ]
    },
    {
        "id": "11bcb79d1f702af9",
        "type": "ui_button",
        "z": "c8f7517e78ec8dba",
        "g": "2416e83a8061434e",
        "name": "",
        "group": "3d25ddb969d32130",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "STATUS OCCUPANCY",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "global",
        "x": 430,
        "y": 320,
        "wires": [
            [
                "104556a6dc858f6d"
            ]
        ],
        "inputLabels": [
            "button"
        ],
        "outputLabels": [
            "click"
        ]
    },
    {
        "id": "104556a6dc858f6d",
        "type": "function",
        "z": "c8f7517e78ec8dba",
        "g": "2416e83a8061434e",
        "name": "function 6",
        "func": "let cmd = \"STATUS OCCUPANCY\\r\\n\";\nnode.send({ payload: cmd});\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 320,
        "wires": [
            [
                "28fa4a1056ac7c7f"
            ]
        ]
    },
    {
        "id": "8f279c814025cc28",
        "type": "ui_button",
        "z": "c8f7517e78ec8dba",
        "g": "2416e83a8061434e",
        "name": "",
        "group": "3d25ddb969d32130",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "STATUS ALL",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "global",
        "x": 390,
        "y": 360,
        "wires": [
            [
                "f0b795d803a242f8"
            ]
        ],
        "inputLabels": [
            "button"
        ],
        "outputLabels": [
            "click"
        ]
    },
    {
        "id": "f0b795d803a242f8",
        "type": "function",
        "z": "c8f7517e78ec8dba",
        "g": "2416e83a8061434e",
        "name": "function 7",
        "func": "let cmd = \"STATUS ALL\\r\\n\";\nnode.send({ payload: cmd});\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 360,
        "wires": [
            [
                "28fa4a1056ac7c7f"
            ]
        ]
    },
    {
        "id": "319c3960c645e705",
        "type": "ui_button",
        "z": "c8f7517e78ec8dba",
        "g": "2416e83a8061434e",
        "name": "",
        "group": "3d25ddb969d32130",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "STATUS NONE",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "global",
        "x": 400,
        "y": 400,
        "wires": [
            [
                "acf9daa2c2b860ec"
            ]
        ],
        "inputLabels": [
            "button"
        ],
        "outputLabels": [
            "click"
        ]
    },
    {
        "id": "acf9daa2c2b860ec",
        "type": "function",
        "z": "c8f7517e78ec8dba",
        "g": "2416e83a8061434e",
        "name": "function 8",
        "func": "let cmd = \"STATUS NONE\\r\\n\";\nnode.send({ payload: cmd});\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 400,
        "wires": [
            [
                "28fa4a1056ac7c7f"
            ]
        ]
    },
    {
        "id": "73b4e9cdd42d5558",
        "type": "ui_button",
        "z": "c8f7517e78ec8dba",
        "g": "2416e83a8061434e",
        "name": "",
        "group": "3d25ddb969d32130",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "STATUS LOAD",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "global",
        "x": 400,
        "y": 440,
        "wires": [
            [
                "911624a51f6f6b84"
            ]
        ],
        "inputLabels": [
            "button"
        ],
        "outputLabels": [
            "click"
        ]
    },
    {
        "id": "911624a51f6f6b84",
        "type": "function",
        "z": "c8f7517e78ec8dba",
        "g": "2416e83a8061434e",
        "name": "function 9",
        "func": "let cmd = \"STATUS LOAD\\r\\n\";\nnode.send({ payload: cmd});\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 440,
        "wires": [
            [
                "28fa4a1056ac7c7f"
            ]
        ]
    },
    {
        "id": "23487a7bf8d99a8a",
        "type": "link out",
        "z": "c8f7517e78ec8dba",
        "name": "status",
        "mode": "link",
        "links": [
            "a99d168a1d271685"
        ],
        "x": 945,
        "y": 400,
        "wires": []
    },
    {
        "id": "888098a48534b797",
        "type": "ui_button",
        "z": "c8f7517e78ec8dba",
        "g": "0890bdfdfb4b5c74",
        "name": "",
        "group": "3d25ddb969d32130",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "GETLOAD 1",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "global",
        "x": 370,
        "y": 560,
        "wires": [
            [
                "ed014a8eb2ca8eec"
            ]
        ]
    },
    {
        "id": "ed014a8eb2ca8eec",
        "type": "function",
        "z": "c8f7517e78ec8dba",
        "g": "0890bdfdfb4b5c74",
        "name": "function 14",
        "func": "let cmd = \"GETLOAD 1\\r\\n\";\nnode.send({ payload: cmd});\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 560,
        "wires": [
            [
                "e0a6dcdb67c60ab3"
            ]
        ]
    },
    {
        "id": "ea6208d40dc9ee8f",
        "type": "ui_button",
        "z": "c8f7517e78ec8dba",
        "g": "0890bdfdfb4b5c74",
        "name": "",
        "group": "3d25ddb969d32130",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "GETLOAD 2",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "global",
        "x": 370,
        "y": 600,
        "wires": [
            [
                "db89119fd5f98426"
            ]
        ]
    },
    {
        "id": "db89119fd5f98426",
        "type": "function",
        "z": "c8f7517e78ec8dba",
        "g": "0890bdfdfb4b5c74",
        "name": "function 15",
        "func": "let cmd = \"GETLOAD 2\\r\\n\";\nnode.send({ payload: cmd});\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 600,
        "wires": [
            [
                "e0a6dcdb67c60ab3"
            ]
        ]
    },
    {
        "id": "76c28458c076ae74",
        "type": "ui_button",
        "z": "c8f7517e78ec8dba",
        "g": "0890bdfdfb4b5c74",
        "name": "",
        "group": "3d25ddb969d32130",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "GETLOAD 3",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "global",
        "x": 370,
        "y": 640,
        "wires": [
            [
                "fe8a3e8627ad96cb"
            ]
        ]
    },
    {
        "id": "fe8a3e8627ad96cb",
        "type": "function",
        "z": "c8f7517e78ec8dba",
        "g": "0890bdfdfb4b5c74",
        "name": "function 16",
        "func": "let cmd = \"GETLOAD 3\\r\\n\";\nnode.send({ payload: cmd});\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 640,
        "wires": [
            [
                "e0a6dcdb67c60ab3"
            ]
        ]
    },
    {
        "id": "72bd6ef3177806bf",
        "type": "ui_button",
        "z": "bda6b5c4b7c97402",
        "g": "26e53faf2b84ee7d",
        "name": "",
        "group": "fa0d92472fc34a80",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "AFTERHOURS",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "global",
        "x": 460,
        "y": 180,
        "wires": [
            [
                "4a5085472e0ed6b1"
            ]
        ]
    },
    {
        "id": "4a5085472e0ed6b1",
        "type": "function",
        "z": "bda6b5c4b7c97402",
        "g": "26e53faf2b84ee7d",
        "name": "function 12",
        "func": "let cmd = \"AFTERHOURS \\r\\n\";\nnode.send({ payload: cmd});\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 180,
        "wires": [
            [
                "6eef616398e28bdd"
            ]
        ]
    },
    {
        "id": "b1553a6c465c31af",
        "type": "ui_button",
        "z": "bda6b5c4b7c97402",
        "g": "26e53faf2b84ee7d",
        "name": "",
        "group": "fa0d92472fc34a80",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "NORMALHOURS",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "global",
        "x": 470,
        "y": 220,
        "wires": [
            [
                "722cac8d15d4a795"
            ]
        ]
    },
    {
        "id": "722cac8d15d4a795",
        "type": "function",
        "z": "bda6b5c4b7c97402",
        "g": "26e53faf2b84ee7d",
        "name": "function 13",
        "func": "let cmd = \"NORMALHOURS \\r\\n\";\nnode.send({ payload: cmd});\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 220,
        "wires": [
            [
                "6eef616398e28bdd"
            ]
        ]
    },
    {
        "id": "256d114e64dd7ad4",
        "type": "link out",
        "z": "bda6b5c4b7c97402",
        "name": "Preset",
        "mode": "link",
        "links": [
            "a99d168a1d271685"
        ],
        "x": 1005,
        "y": 320,
        "wires": []
    },
    {
        "id": "284c240164cf782b",
        "type": "ui_button",
        "z": "bda6b5c4b7c97402",
        "g": "26e53faf2b84ee7d",
        "name": "",
        "group": "fa0d92472fc34a80",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "CLEAN",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "global",
        "x": 440,
        "y": 300,
        "wires": [
            [
                "43dec161b614ce6a"
            ]
        ]
    },
    {
        "id": "43dec161b614ce6a",
        "type": "function",
        "z": "bda6b5c4b7c97402",
        "g": "26e53faf2b84ee7d",
        "name": "function 31",
        "func": "let cmd = \"CLEAN 1&2&3 100\\r\\n\";\nnode.send({ payload: cmd});\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 300,
        "wires": [
            [
                "c89958bf0649c980"
            ]
        ]
    },
    {
        "id": "6e8551e1e2324dc6",
        "type": "ui_button",
        "z": "bda6b5c4b7c97402",
        "g": "26e53faf2b84ee7d",
        "name": "",
        "group": "fa0d92472fc34a80",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "CLEANCANCEL",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "global",
        "x": 460,
        "y": 340,
        "wires": [
            [
                "a6b44c9240538153"
            ]
        ]
    },
    {
        "id": "a6b44c9240538153",
        "type": "function",
        "z": "bda6b5c4b7c97402",
        "g": "26e53faf2b84ee7d",
        "name": "function 32",
        "func": "let cmd = \"CLEANCANCEL 1&2&3\\r\\n\";\nnode.send({ payload: cmd});\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 340,
        "wires": [
            [
                "c89958bf0649c980"
            ]
        ]
    },
    {
        "id": "048c981e4fff6470",
        "type": "ui_button",
        "z": "bda6b5c4b7c97402",
        "g": "26e53faf2b84ee7d",
        "name": "",
        "group": "fa0d92472fc34a80",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "LOCKBUTTONS",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "global",
        "x": 470,
        "y": 420,
        "wires": [
            [
                "a02e6369f0d0f7d9"
            ]
        ]
    },
    {
        "id": "a02e6369f0d0f7d9",
        "type": "function",
        "z": "bda6b5c4b7c97402",
        "g": "26e53faf2b84ee7d",
        "name": "function 33",
        "func": "let cmd = \"LOCKBUTTONS 0\\r\\n\";\nnode.send({ payload: cmd});\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 420,
        "wires": [
            [
                "e7f6c298891f01f0"
            ]
        ]
    },
    {
        "id": "70a632d1a890dd08",
        "type": "ui_button",
        "z": "bda6b5c4b7c97402",
        "g": "26e53faf2b84ee7d",
        "name": "",
        "group": "fa0d92472fc34a80",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "UNLOCKBUTTONS",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "global",
        "x": 480,
        "y": 460,
        "wires": [
            [
                "30d5c0826476ccef"
            ]
        ]
    },
    {
        "id": "30d5c0826476ccef",
        "type": "function",
        "z": "bda6b5c4b7c97402",
        "g": "26e53faf2b84ee7d",
        "name": "function 34",
        "func": "let cmd = \"UNLOCKBUTTONS\\r\\n\";\nnode.send({ payload: cmd});\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 460,
        "wires": [
            [
                "e7f6c298891f01f0"
            ]
        ]
    },
    {
        "id": "30397406d20d23fe",
        "type": "ui_button",
        "z": "042576a447ce56b6",
        "g": "d80438cba1a188eb",
        "name": "",
        "group": "616e7ac9b1ef9449",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Version",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "global",
        "x": 440,
        "y": 260,
        "wires": [
            [
                "2f99ddb03123ca52"
            ]
        ]
    },
    {
        "id": "2f99ddb03123ca52",
        "type": "function",
        "z": "042576a447ce56b6",
        "g": "d80438cba1a188eb",
        "name": "function 23",
        "func": "let cmd = \"VERSION \";\nnode.send({ payload: cmd});\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 260,
        "wires": [
            [
                "4587be83258a5766"
            ]
        ]
    },
    {
        "id": "8db77c7dae3226d4",
        "type": "ui_button",
        "z": "042576a447ce56b6",
        "g": "d80438cba1a188eb",
        "name": "",
        "group": "616e7ac9b1ef9449",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "ECHO",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "global",
        "x": 430,
        "y": 300,
        "wires": [
            [
                "42957532156295ed"
            ]
        ]
    },
    {
        "id": "42957532156295ed",
        "type": "function",
        "z": "042576a447ce56b6",
        "g": "d80438cba1a188eb",
        "name": "function 24",
        "func": "let cmd = \"ECHO hello\";\nnode.send({ payload: cmd});\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 300,
        "wires": [
            [
                "4587be83258a5766"
            ]
        ]
    },
    {
        "id": "4587be83258a5766",
        "type": "link out",
        "z": "042576a447ce56b6",
        "name": "Node test",
        "mode": "link",
        "links": [
            "a99d168a1d271685"
        ],
        "x": 915,
        "y": 280,
        "wires": []
    }
]